
services:
  #megaservice:
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
  #  container_name: megaservice
  #  #depends_on:
  #  #  - redis-vector-db
  #  #  - tei-embedding-service
  #  #  - retriever
  #  #  - tei-reranking-service
  #  #  - vllm-service
  #  ports:
  #    - "8888:8888"
  #  ipc: host
  #  restart: always
  speecht5-service:
    image: ${REGISTRY:-opea}/speecht5:${TAG:-latest}
    container_name: speecht5-service
    ports:
      - ${SPEECHT5_PORT:-7055}:7055
    ipc: host
    environment:
      NO_PROXY: ${NO_PROXY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7055/health"]
      interval: 10s
      timeout: 6s
      retries: 18
  
  gptsovits-service:
    image: ${REGISTRY:-opea}/gpt-sovits:${TAG:-latest}
    container_name: gpt-sovits-service
    ports:
      - ${GPT_SOVITS_PORT:-9880}:9880
    ipc: host
    volumes:
      - ./audio:/audio
    environment:
      NO_PROXY: ${NO_PROXY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9880/health"]
      interval: 10s
      timeout: 6s
      retries: 18
      
  tts-gptsovits:
    image: ${REGISTRY:-opea}/tts:${TAG:-latest}
    container_name: tts-gptsovits-service
    ports:
      - ${TTS_PORT:-9088}:9088
    ipc: host
    environment:
      TTS_ENDPOINT: http://${HOST_IP}:9880
      TTS_COMPONENT_NAME: ${TTS_COMPONENT_NAME:-OPEA_GPTSOVITS_TTS}
    depends_on:
      gptsovits-service:
        condition: service_healthy

networks:
  megaservice_network:
    driver: bridge